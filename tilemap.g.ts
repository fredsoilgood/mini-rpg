// Code généré automatiquement. Ne pas modifier.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "niveau3":
            case "niveau3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "niveau4":
            case "niveau4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "biome marécage":
            case "point de spawn1":return tiles.createTilemap(hex`140014000e0b0b0b0b0b0b0b0b0b0b0b0b0101010101010c0d101010101010101010100a10101010101010020d101010101010101010100a10101010101010020d101010101010101010100a10101010111012020d101010101012101010100a10101010101010020d101010101010101010100a1010101010100f020d101011101010101010100a10101010101010020d101010101010101010100a10101010101010020d101010121010101010100a10101210101010020d101010101010101010100a10101010101010020309090909090909090909090909090909090902030909090909090909090909090909090909090803101010101010101010101010101010101010020310101010101011101010101010101010101002031010101010101010101010101110111010100203010101010710101010101010101010101010020313131313081010111010101010101010111002031313131308101010101010101110101010100203131313131410101010101010101010101010020504040404040404040404040404040404040406`, img`
22222222222222222222
2..................2
2..................2
2..................2
2..................2
2..................2
2..................2
2..................2
2..................2
2..................2
.2222222.2222222222.
.2222222.2222222222.
2..................2
2..................2
2..................2
222222.............2
2....2.............2
2....2.............2
2..................2
22222222222222222222
`, [myTiles.transparency16,sprites.dungeon.greenOuterNorth0,sprites.dungeon.greenOuterEast1,sprites.dungeon.greenOuterWest1,sprites.dungeon.greenOuterSouth0,sprites.dungeon.greenOuterSouthEast,sprites.dungeon.greenOuterSouthWest,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenOuterEast0,sprites.dungeon.floorDark1,sprites.dungeon.purpleOuterEast0,sprites.dungeon.purpleOuterNorth1,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.purpleOuterWest1,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.chestClosed,sprites.dungeon.darkGroundCenter,sprites.dungeon.darkGroundSouthEast1,sprites.dungeon.darkGroundSouthWest1,sprites.dungeon.floorLight0,sprites.dungeon.floorLight1], TileScale.Sixteen);
            case "niveau5":
            case "niveau5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "marécage":
            case "niveau2":return tiles.createTilemap(hex`1000100001010101090101010101010101010101010901010101010101010101010101010101010101020902010109010101010101010101020101010101010101010101010101020104050801010101010109010101010101050605010202020101020101010901010305070201010101020201010101010202010101010901010405060101010102020202010101010103060501020101040508020202020102010101010201010506050101040508020101010102020103050702020506050201010101010201010101010103050701010101010102010101090101010101010101010101090101010101010101010109010101010101010101010101010101010101`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 2 2 2 . . . . . . . . 
. . . . . 2 2 2 . . . . . . . . 
. . . . . 2 2 2 . . . . . . . . 
. . . . . . . . . . . . . 2 2 2 
. . . . . . . . . . . . . 2 2 2 
. . . . 2 2 2 . . . . . . . . . 
. . . . 2 2 2 . . 2 2 2 . . . . 
. . . . 2 2 2 . . 2 2 2 . . . . 
. . . . . . . . . 2 2 2 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileDarkGrass1,sprites.castle.tileDarkGrass3,sprites.swamp.swampTile12,sprites.swamp.swampTile6,sprites.swamp.swampTile9,sprites.swamp.swampTile13,sprites.swamp.swampTile14,sprites.swamp.swampTile8,sprites.castle.tileDarkGrass2], TileScale.Sixteen);
            case "niveau6":
            case "niveau6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "niveau1":
            case "niveau1":return tiles.createTilemap(hex`10001000020202020b0b02020101020202020202020202020807020202020202010202020201010208070202020202020201020202020202080702020103020202020202020201020807020202020202020202020202010208070201020202020202020202010102080702020202020303010202020102020806040404040404040404090202030208060505050505050505050a02020302080702010102020202020202020203020807020102020202020202020202030208070303020202020202010202020102080702020202020102020102020211150807151402020202020202020202130d08070d1002020202020102020202120e0c0c0e0f0202020202020202`, img`
2 2 2 2 . . 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . 2 2 . . 2 2 . . . . . . . 2 
2 . 2 2 . . 2 2 . . . . . . . 2 
2 2 2 2 . . 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.castle.tileGrass1,sprites.castle.tileGrass3,sprites.castle.tilePath2,sprites.castle.tilePath8,sprites.castle.tilePath5,sprites.castle.tilePath6,sprites.castle.tilePath4,sprites.builtin.forestTiles7,sprites.builtin.forestTiles15,sprites.swamp.swampTile9,sprites.dungeon.doorClosedSouth,sprites.dungeon.doorLockedSouth,sprites.dungeon.greenOuterSouth0,sprites.dungeon.greenOuterSouthWest,sprites.dungeon.greenOuterEast0,sprites.dungeon.greenOuterNorthWest,sprites.dungeon.greenOuterSouthEast,sprites.dungeon.greenOuterWest1,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenOuterNorth0], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "pont":
            case "tile1":return tile1;
        }
        return null;
    })

}
// Code généré automatiquement. Ne pas modifier.
